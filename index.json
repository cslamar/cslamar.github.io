[{"content":"","date":"2023 February 16","permalink":"/tags/audio/","section":"Tags","summary":"","title":"audio"},{"content":"In Part 1 of this series I detailed how to configure a single button on a MIDI device to interact with SoundSource through Keyboard Maestro and Apple\u0026rsquo;s Shortcuts. While long, it was a pretty simple implementation. Sliders, faders, and knobs are a little trickier due to some considerations in how MIDI handles signals.\nDesign Considerations # One of the minor challenges in using a MIDI device to control a software setup like SoundSource, has to do with the MIDI protocol. This is made easier with Keyboard Maestro, but the challenge is still present. The \u0026ldquo;problem\u0026rdquo; has to do with the fact that MIDI signals send values from 0 - 127 to the MIDI host, so mapping must be done to turn them into a percentage value that you want for a volume slider. Luckily Keyboard Maestro allows us a variety of ways to do this operation with ease!\nAnother consideration in the implementation, is that Keyboard Maestro is quick to react to input triggers. There\u0026rsquo;s a rate limit on the number of macros that can run within a given timeframe (about 50 within a second).\nThis may not seem like a big deal, but as you\u0026rsquo;ll see in the details below, if you\u0026rsquo;re not aware of this, things will not work if you\u0026rsquo;re tweaking too much. By this I mean if you were trying moving the slider continuously, and the trigger was keyed every time you move the slider, you\u0026rsquo;d run up against that rate limit fast and nothing would work until it cleared the backlog. Not optimal.\nI\u0026rsquo;ll start with the documentation around how to achieve the end result first, and for those who care about why, end with the design philosophy on how it was achieved.\nImplementation Details # How to use a slider and knobs for volume control\nKeyboard Maestro Part 1 # Start by creating a new macro within Keyboard Maestro. Once again, setting up a MIDI trigger, using the MIDI Learn option as was done in Part 1. As a departure from part 1, after you\u0026rsquo;ve used MIDI Learn to determine the correct slider/knob, change the dropdown to the right of controller number from is pressed to changes (this will allow for triggers in either direction). Next add an action at the bottom of the macro pane, search for Set Variable to Text, and add it to the current macro. (Now it gets fun) Set the variable name to Vol Set the \u0026rsquo;to\u0026rsquo; %TriggerValue[3]% this is the way for Keyboard Maestro to parse a string of data into the values we want. There\u0026rsquo;s a link below to the MIDI page of the Keyboard Maestro wiki if you want more details. Add another action, this time searching for Semaphore Lock and add it to the macro. Technical details below Give the lock the name VolumeLock Add another action, this time searching for Execute a JavaScript For Automation and add it to the macro. In the body of that action add the following JavaScript code; Technical details below var kme = Application(\u0026#34;Keyboard Maestro Engine\u0026#34;); function map (value, oldRange, newRange) { var newValue = (value - oldRange[0]) * (newRange[1] - newRange[0]) / (oldRange[1] - oldRange[0]) + newRange[0]; return Math.min(Math.max(newValue, newRange[0]) , newRange[1]); } var rawValue = kme.getvariable(\u0026#39;Vol\u0026#39;); var mappedAudio = map(rawValue, [0,127], [0,100]); kme.setvariable(\u0026#39;KMmappedVol\u0026#39;, { to: Math.round(mappedAudio) }); Next add another action at the bottom of the macro pane, search for Set Variable to Text, and add it to the current macro. Set the variable vm to VolString Set the \u0026rsquo;to\u0026rsquo; %Variable%KMmappedVol% (this is Keyboard Maestro getting the results from the JavaScript code that was run previously) Now we\u0026rsquo;re one step away from being done in Keyboard Maestro! Back to Apple Shortcuts!\nApple Shortcuts # This Shortcut is simple and quick:\nAdd a shortcut from the menu by click the + button at the top of the window Give it a name like Set Roon Volume (or whatever app you\u0026rsquo;re targeting) In the right pane, search for Keyboard Maestro then drag the Get Variable to the center pane Double-click the Variable text and enter VolString (which was the final variable we specified in the Keyboard Maestro section) In the right pane, search for SoundSource then drag the Set Source Volume to the center pane Click Source and choose your desired app (Roon in my example) Right-click on the 100% text and click Select Variable There should be an entry called VolString or Value below the Get Variable block before the current block. Click once on VolString or Value. If you don\u0026rsquo;t see VolString or Value, save your shortcut, close it, and reopen it. The correct label should be there now. Control Volume Shortcut Keyboard Maestro Part 2 # As before, add a new action to the macro that you\u0026rsquo;ve been building, searching for Execute Shortcut From the dropdown menu to the right of the Execute Shortcut dialog choose your newly created Shortcut Below that change value of With input from, to Variable and put in the name of the Keyboard Maestro variable: VolString That\u0026rsquo;s it! Simply copy this macro changing the name, controller number, and Shortcut target! If you\u0026rsquo;re curious as to why you just did, what you just did, keep reading.\nIn the end you should have a macro that looks something like the following\nFinal Slider Macro Technical Details # There are details that I glossed over as to why something needed to be done a certain way in order to allow people to get it working faster. What follows are the details behind what is actually happening.\nSemaphore Lock # As mentioned above, Keyboard Maestro will start to rate limit the number of executions of macros depending on how frequently they are called. You can imagine in the example above, that this could happen too quickly if every time you moved the slider, a macro was triggered. Moving the slider from 0 to 100 could trigger 127 macros within a very quick timeframe. So how do we get around this?\nSemaphores for the win!!\nA semaphore is a kind of waiter that will block any input, or changes in our case. When the macro reaches the semaphore it will block all input for a moment then continue with the rest of the macro. This may seem weird, but it works. It allows you to continue to move the slider at any speed while only processing a handful of events, ending with your final position, while still giving you the feedback of changing the volume in near realtime.\nJavaScript Automation # The code here simply uses JavaScript to get the variable from Keyboard Maestro, and maps the value from 0 - 127 to 0 - 100. This is needed because the volume value in SoundSource is a percentage between 0 and 100. JavaScript was used here due to the fact that Keyboard Maestro has a built-in JavaScript engine and libraries.\nLinks # Keyboard Maestro Wiki MIDI GitHub repo of Keyboard Maestro Macros and Apple Shortcuts ","date":"2023 February 16","permalink":"/articles/midi-mixer-part-2/","section":"The Random Thoughts of Chris Slamar","summary":"How to use hardware MIDI sliders/knobs for software volume control with SoundSource and Keyboard Maestro","title":"Hardware MIDI Controller For All Applications (Part 2)"},{"content":"","date":"2023 February 16","permalink":"/series/hardware-mixer-for-software-applications/","section":"Series","summary":"","title":"Hardware Mixer for Software Applications"},{"content":"","date":"2023 February 16","permalink":"/tags/macos/","section":"Tags","summary":"","title":"macOS"},{"content":"","date":"2023 February 16","permalink":"/series/","section":"Series","summary":"Collections of Articles","title":"Series"},{"content":"","date":"2023 February 16","permalink":"/","section":"Slamar.com","summary":"","title":"Slamar.com"},{"content":"","date":"2023 February 16","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":"2023 February 16","permalink":"/articles/","section":"The Random Thoughts of Chris Slamar","summary":"","title":"The Random Thoughts of Chris Slamar"},{"content":"Chris Slamar is a thirty-something Unix geek that currently lives near Chicago, Illinois and works for Hologram\nWhen not at work I enjoy music, reading, tinkering, and doing computer related tasks that most would categorize as work related.\nI\u0026rsquo;m married to the lovely Kristina, my wonderful wife who helps keep me sane(ish)! She is also in charge of editing my horrible spelling, so please direct any mistakes you may find on this site to grammar-nazi@slamar.com\nWhen it comes to electronics, my interests are wide. If it plugs in, I love it! Technology (and all the various things come with it) is my passion. Iâ€™ve set up a multitude of network services over the years, and have written various projects to explore all aspects of the technological world.\nFun Fact: I used to do support and development for an open source project, from 2005 to 2009, called Ampache which you should check out!\nI try not to take myself too serious all the time ","date":"2023 February 16","permalink":"/about/","section":"Slamar.com","summary":"Chris Slamar is a thirty-something Unix geek that currently lives near Chicago, Illinois and works for Hologram","title":"About"},{"content":"Using a hardware MIDI mixer to control software audio volumes with SoundSource and Keyboard Maestro on macOS.\nEquipment/Software Used # MIDI Controller/Mixer KORG nanoKONTROL Studio Software Audio Mixer Rogue Amoeba SoundSource Software for Bridging the Hardware to Software Gap Keyboard Maestro Apple Shortcuts (included with macOS) SoundSource\u0026rsquo;s Apple Shortcuts Integration Provides the binder between Keyboard Maestro and SoundSource. Implementation Details # Keyboard Maestro MIDI Integration\nKeyboard Maestro allows for the creation of sequences of actions to be performed via a variety of input methods. Usually this is accomplished by various keystrokes or combinations of them, but one of the available methods of triggering them is via MIDI! I leveraged this to accomplish the task of converting MIDI signals from my controller to manipulate the input data and pass it along the path to eventually control the SoundSource mixer.\nSimple Button Actions # The best place to start is with simple MIDI button actions. I leverage this to quickly set the EQ for different songs on the fly or trigger other non-music actions that I\u0026rsquo;ve programed in. Once you\u0026rsquo;ve set up the first, it\u0026rsquo;s easy to quickly add more as you see fit. This example will be targeted at changing the EQ for a single application or system-wide (however you want to do it).\nKeyboard Maestro Steps # Start by creating a new macro in Keyboard Maestro. Name it something like MIDI controller EQ off (or whatever EQ action this button will perform), click the New Trigger button, and choose MIDI Trigger Change the dropdown with the value of note to be the value of controller. With the MIDI Learn checkbox checked, click a single button on your MIDI controller/device The controller text input should have changed to the MIDI number of that input Once that\u0026rsquo;s complete, uncheck MIDI Learn so you don\u0026rsquo;t override the device number Change the dropdown to the right of the controller text field from is pressed to is released. This helps prevent double inputs and gives a more \u0026ldquo;natural\u0026rdquo; experience. Click the New Action button at the lower end of the pane on the right In the search bar of the newly opened middle pane, search for Set Variable to Text, then drag the time to the bottom section of the pane on the right under the \u0026ldquo;Will execute the following actions:\u0026rdquo; header. In the new section that appeared, enter the following values (note: you will need to do this for each EQ preset that you want to have a hot button for): \u0026lsquo;Set variable\u0026rsquo; - KMEQ (You will be using this same variable for each EQ macro and the Apple Shortcuts so make sure you note it down and keep it consistent) \u0026rsquo;to\u0026rsquo; - Off Save your macro and navigate to the Apple Shortcuts app that is included with macOS, but don\u0026rsquo;t close out Keyboard Maestro. In Progress Keyboard Maestro Macro Apple Shortcuts Steps # Once you\u0026rsquo;ve loaded the Apple Shortcuts app, do the following:\nClick the + button in the toolbar to create a new shortcut In the search dialog in the top of the right side pane, search for keyboard maestro, and in the filtered list double click Get Variable In the new item at the top of the center pane, click where the pill icon says Variable, and change it to KMEQ Clear the search dialog and search for if. Double-click on it when it shows up in the filtered list. Delete the Otherwise pill in the middle of the If block by clicking on the x on the right side of the pill. In the if block, click the Condition text, then choose is, then click the Text section and enter Off This last value is the name of the EQ preset that you are trying to activate. In this example it is Off, but if you are continuing on, it would be whichever you are currently trying to configure. This MUST match one of the variable assignments you made in the previous Keyboard Maestro steps, otherwise it will not trigger a valid EQ preset. Next, clear the search dialog again, and now enter soundsource Drag the list item Set Source Effect Preset in between the If and End If pill boxes Add the following information Source - Choose the name of the application to apply the effect to from the dropdown (Roon in my example). If you don\u0026rsquo;t see your device listed, delete the item you just added between the If block, open the target application, play some sound through it, and try again. The application should now show up in the Source dropdown list. If not, you can enter the name manually making sure that the name matches exactly how it\u0026rsquo;s shown in SoundSource. This IS case-sensitive! Effect - Choose from the dropdown one of the effects that you have enabled through SoundSource for that application (10-Band EQ in my example) Preset - Choose from the list of presets that are provided. Flat (Off) in my example. Save your work to something descriptive! Set Roon EQ in my case. Then switch back to Keyboard Maestro. (Note you can finish configuring Shortcuts fully before heading back to Keyboard Maestro, but for the sake of brevity we won\u0026rsquo;t) Set Roon EQ Shortcut Back in Keyboard Maestro # Make sure that you are still in the Macro that you were before and do the following:\nClick New Action at the bottom of the pane on the right Search for Execute Shortcut and drag the result below your Set Variable block configured previously. Click the small downward arrow to the right of the Execute shortcut dialog and select the name of the shortcut you just created. (note: if it does not show up right away, try closing Keyboard Maestro and/or Shortcuts and reopening them.) Final Product # That\u0026rsquo;s it! You should now be able to trigger the EQ setting to whichever application you configured (Roon in this example). You can keep adding more by repeating the same steps above with the following things in mind:\nYou MUST use the same Keyboard Maestro variable (KMEQ in my example) for all the Keyboard Maestro triggers. Since that is what is sent to that single shortcut, the value should be unique. When expanding the Shortcut, simply add a new If block, deleting the Otherwise block as before, and match it with the value from the Keyboard Maestro variable value. Labeled up and ready for use! Next Steps # The second part to this article, which covers using sliders and knobs to control independent application volume levels, can be found here.\nLinks # SoundSource Keyboard Maestro KORG nanoKONTROL Studio GitHub repo of Keyboard Maestro Macros and Apple Shortcuts ","date":"2023 February 15","permalink":"/articles/midi-mixer-part-1/","section":"The Random Thoughts of Chris Slamar","summary":"How to use hardware MIDI buttons for control over software audio parameters with SoundSource and Keyboard Maestro","title":"Hardware MIDI Controller For All Applications (Part 1)"}]